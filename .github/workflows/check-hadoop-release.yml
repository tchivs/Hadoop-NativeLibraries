name: Check Hadoop Release
run-name: Checking if there is a new Hadoop release

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect latest Hadoop release
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const { data } = await github.repos.listTags({
              owner: 'apache',
              repo: 'hadoop',
              per_page: 100,
            });

            const releaseTags = data
              .map(tag => tag.name)
              .filter(name => name.startsWith('rel/release-'))
              .sort((a, b) => a.localeCompare(b, undefined, { numeric: true }));

            if (!releaseTags.length) {
              core.setFailed('Unable to determine the latest Hadoop release tag.');
              return;
            }

            const latestTag = releaseTags[releaseTags.length - 1];
            const latestVersion = latestTag.replace('rel/release-', '');
            const currentTag = fs.existsSync('current-release.txt')
              ? fs.readFileSync('current-release.txt', 'utf8').trim()
              : '';

            core.info(`Latest upstream tag: ${latestTag}`);
            core.info(`Stored tag: ${currentTag || '<none>'}`);

            core.setOutput('tag', latestTag);
            core.setOutput('version', latestVersion);

            if (currentTag !== latestTag) {
              fs.writeFileSync('current-release.txt', `${latestTag}\n`);
              core.setOutput('update_needed', 'true');
            } else {
              core.setOutput('update_needed', 'false');
            }

      - name: Commit updated release marker
        if: steps.detect.outputs.update_needed == 'true'
        env:
          NEW_TAG: ${{ steps.detect.outputs.tag }}
        run: |
          set -euo pipefail
          git config user.name "hadoop-release-bot"
          git config user.email "hadoop-release-bot@users.noreply.github.com"
          git add current-release.txt
          git commit -m "Update latest Hadoop release to ${NEW_TAG}"

      - name: Push changes
        if: steps.detect.outputs.update_needed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git push origin HEAD:main

      - name: Trigger Windows build workflow
        if: steps.detect.outputs.update_needed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh workflow run "Build Hadoop Windows Native Libraries" --ref main \
            -f hadoop_version="${{ steps.detect.outputs.version }}" \
            -f architecture="both"

name: Check Hadoop Release
run-name: Checking if there is a new Hadoop release

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect latest Hadoop release
        id: detect
        run: |
          set -euo pipefail

          latest_tag=$(curl -fsSL "https://api.github.com/repos/apache/hadoop/tags?per_page=100" | python - <<'PYCODE'
import json, sys
tags = json.load(sys.stdin)
releases = [t["name"] for t in tags if t["name"].startswith("rel/release-")]
releases.sort()
print(releases[-1] if releases else "", end="")
PYCODE
          )

          if [ -z "${latest_tag}" ]; then
            echo "Unable to determine the latest Hadoop release tag." >&2
            exit 1
          fi

          latest_version="${latest_tag#rel/release-}"
          current_tag=""
          if [ -f current-release.txt ]; then
            current_tag=$(tr -d '\r\n' < current-release.txt)
          fi

          echo "Latest upstream tag: ${latest_tag}"
          echo "Stored tag: ${current_tag:-<none>}"

          if [ "${current_tag}" != "${latest_tag}" ]; then
            echo "${latest_tag}" > current-release.txt
            echo "update_needed=true" >> "$GITHUB_OUTPUT"
          else
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
          fi

          echo "tag=${latest_tag}" >> "$GITHUB_OUTPUT"
          echo "version=${latest_version}" >> "$GITHUB_OUTPUT"

      - name: Commit updated release marker
        if: steps.detect.outputs.update_needed == 'true'
        env:
          NEW_TAG: ${{ steps.detect.outputs.tag }}
        run: |
          set -euo pipefail
          git config user.name "hadoop-release-bot"
          git config user.email "hadoop-release-bot@users.noreply.github.com"
          git add current-release.txt
          git commit -m "Update latest Hadoop release to ${NEW_TAG}"

      - name: Push changes
        if: steps.detect.outputs.update_needed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git push origin HEAD:main

      - name: Trigger Windows build workflow
        if: steps.detect.outputs.update_needed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh workflow run "Build Hadoop Windows Native Libraries" --ref main \
            -f hadoop_version="${{ steps.detect.outputs.version }}" \
            -f architecture="both"
